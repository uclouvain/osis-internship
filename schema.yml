openapi: 3.0.0
info:
  version: "1.1.6"
  title: Internship API
  description: 'This API delivers data for the Internship project.'
  contact:
    name: 'UCLouvain - OSIS'
    url: https://github.com/uclouvain/osis

servers:
  - url: https://{environment}.osis.uclouvain.be/api/v1/internship/
    variables:
      environment:
        default: dev
        enum:
          - dev # Development server
          - qa # Staging server
          - test # Test server
  - url: https://osis.uclouvain.be/api/v1/internship/
    description: Production server

paths:
  /masters:
    get:
      description: Obtain the list of internship masters
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of internship masters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterPaging"
      tags:
        - internship
    post:
      description: Create new internship master
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterGet'
      responses:
        200:
          description: Successfully created an internship master
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterGet'
      tags:
        - internship
  /masters/{uuid}/:
    get:
      description: Obtain information about a specific master
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the master
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a master's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterGet'
      tags:
        - internship
  /masters/{uuid}/activate_account/:
    post:
      description: Set master account activation status to ACTIVE
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the master
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful master's account status update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterGet'
      tags:
        - internship
  /masters/{uuid}/allocations:
    get:
      description: Obtain the list of internship-master allocations
      parameters:
          - in: path
            name: uuid
            required: true
            description: The UUID of the master
            schema:
              $ref: '#/components/schemas/Uuid'
          - in: query
            name: current
            schema:
              type: boolean
            required: false
          - $ref: '#/components/parameters/Accept-Language'
          - $ref: '#/components/parameters/X-User-FirstName'
          - $ref: '#/components/parameters/X-User-LastName'
          - $ref: '#/components/parameters/X-User-Email'
          - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of allocations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationPaging"
      tags:
        - internship
  /masters_allocations/{uuid}/:
    get:
      description: Obtain information about a specific master allocation
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the master allocation
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a master allocation's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationGet'
      tags:
        - internship
    delete:
      description: Delete a master allocation
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the master allocation
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        204:
          description: Successful delete of a master allocation's data.
      tags:
        - internship
  /masters_allocations:
    get:
      description: Obtain the list of master allocations filtered by specialty and organization
      parameters:
        - in: query
          name: organization
          schema:
            type: string
          required: true
        - in: query
          name: specialty
          schema:
            type: string
          required: true
        - in: query
          name: role
          schema:
            type: string
            default: all
          required: false
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of masters allocations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationPaging"
      tags:
        - internship
    post:
      description: Create new internship allocation
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocationGet'
      responses:
        200:
          description: Successfully created an internship master allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationGet'
      tags:
        - internship
  /specialties:
    get:
      description: Obtain the list of specialties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of specialties
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecialtyPaging"
      tags:
        - internship
  /specialties/{uuid}/:
    get:
      description: Obtain information about a specific specialty
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the specialty
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a specialty's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialtyGet'
      tags:
        - internship
  /cohorts:
    get:
      description: Obtain the list of cohorts
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of cohorts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CohortPaging"
      tags:
        - internship
  /cohorts/{uuid}/:
    get:
      description: Obtain information about a specific cohort
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the cohort
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a cohort's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CohortGet'
      tags:
        - internship
  /organizations:
    get:
      description: Obtain the list of organizations
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of organizations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationPaging"
      tags:
        - internship
  /organizations/{uuid}/:
    get:
      description: Obtain information about a specific organization
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the organization
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of an organization's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationGet'
      tags:
        - internship
  /internships:
    get:
      description: Obtain the list of internships
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of internships
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternshipPaging"
      tags:
        - internship
  /internships/{uuid}/:
    get:
      description: Obtain information about a specific internship
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the internship
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of an internship's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternshipGet'
      tags:
        - internship
  /periods:
    get:
      description: Obtain the list of periods
      parameters:
        - in: query
          name: active
          schema:
            type: boolean
          required: false
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of periods
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeriodPaging"
      tags:
        - internship
  /periods/{uuid}/:
    get:
      description: Obtain information about a specific period
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the period
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a period's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodGet'
      tags:
        - internship
  /students:
    get:
      description: Obtain the list of students
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of students
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentPaging"
      tags:
        - internship
  /students/{uuid}/:
    get:
      description: Obtain information about a specific internship student
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the internship student
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a internship student's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGet'
      tags:
        - internship
  /students_affectations/{specialty}/{organization}:
    get:
      description: Obtain the list of students affectations
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
        - in: path
          name: specialty
          schema:
            type: string
          required: true
        - in: query
          name: period
          schema:
            type: string
            default: all
          required: false
        - in: query
          name: limit
          schema:
            type: integer
          required: false
        - in: query
          name: offset
          schema:
            type: integer
          required: false
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of the list of students affectations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentAffectationPaging"
      tags:
        - internship
  /students_affectations/{specialty}/{organization}/stats/:
    get:
      description: Obtain the stats of students affectations
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
        - in: path
          name: specialty
          schema:
            type: string
          required: true
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of students affectations stats
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  validated_count:
                    type: integer
      tags:
        - internship
  /students_affectations/{uuid}/:
    get:
      description: Obtain information about a specific student's affectation
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the student's affectation
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get of a student's affectation's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAffectationGet'
      tags:
        - internship

  /scores/{affectation_uuid}/:
    get:
      description: Get score detail
      parameters:
        - in: path
          name: affectation_uuid
          required: true
          description: The UUID of the affectation
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Successful get or create of a student's score for a given period.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGet'
      tags:
        - internship
    put:
      description: Update a student's score for a given period
      parameters:
        - in: path
          name: affectation_uuid
          required: true
          description: The UUID of the affectation
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreGet'
      responses:
        201:
          description: Successful update of a score for a given period
      tags:
        - internship

  /scores/{affectation_uuid}/validate/:
    post:
      description: Validate a score
      parameters:
        - in: path
          name: affectation_uuid
          required: true
          description: The UUID of the period
          schema:
            $ref: '#/components/schemas/Uuid'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        204:
          description: Successfully validated an internship score
        404:
          description: Affectation or score not found, validation aborted
      tags:
        - internship
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
  parameters:
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: >
        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  schemas:
    AcceptedLanguageEnum:
      type: string
      enum:
        - 'en'
        - 'fr-be'
    MasterGet:
      type: object
      properties:
          url:
            type: string
            format: uri
          uuid:
            $ref: '#/components/schemas/Uuid'
          person:
            $ref: '#/components/schemas/Person'
          civility:
            type: string
            nullable: true
            example: "DOCTOR"
          user_account_status:
            type: string
            enum:
              - "ACTIVE"
              - "PENDING"
              - "INACTIVE"
    AllocationGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        master:
          $ref: '#/components/schemas/MasterGet'
        organization:
          $ref: '#/components/schemas/OrganizationGet'
        specialty:
          $ref: '#/components/schemas/SpecialtyGet'
        role:
          type: string
          example: "MASTER"
    SpecialtyGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        name:
          type: string
          example: "Xyzetologie"
        acronym:
          type: string
          example: "XYZ"
        mandatory:
          type: boolean
          example: true
        sequence:
          type: integer
          nullable: true
          example: 1
        cohort:
          $ref: '#/components/schemas/CohortGet'
        selectable:
          type: boolean
          example: true
    CohortGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        name:
          type: string
          example: "R6-2021"
        description:
          type: string
          nullable: true
          example: "Student cohort for academic year 2020-2021"
        publication_start_date:
          type: string
          example: 01/04/2020
        subscription_start_date:
          type: string
          example: 01/02/2020
        subscription_end_date:
          type: string
          example: 01/03/2020
    OrganizationGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        name:
          type: string
          example: "CHU XYZ"
        acronym:
          type: string
          example: "XYZ"
        website:
          type: string
          nullable: true
          example: "www.chuxyz.be"
        reference:
          type: string
          example: "01"
        phone:
          type: string
          nullable: true
          example: "01/01.01.01"
        location:
          type: string
          nullable: true
          example: "Rue de l'hôpital"
        postal_code:
          type: string
          nullable: true
          example: "1000"
        city:
          type: string
          nullable: true
          example: "Bruxelles"
        country:
          $ref: '#/components/schemas/Country'
        cohort:
          $ref: '#/components/schemas/CohortGet'
    InternshipGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        name:
          type: string
          example: "XYZ"
        speciality:
          $ref: '#/components/schemas/SpecialtyGet'
        cohort:
          $ref: '#/components/schemas/CohortGet'
        length_in_periods:
          type: integer
          example: 1
        position:
          type: integer
          example: 1
    StudentGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        person:
          $ref: '#/components/schemas/Person'
        location:
          type: string
          nullable: true
          example: "Rue de la maison, 10"
        postal_code:
          type: string
          nullable: true
          example: "1000"
        city:
          type: string
          nullable: true
          example: "Bruxelles"
        country:
          type: string
          nullable: true
          example: "Belgique"
        email:
          type: string
          nullable: true
          example: "jean.pondu@mail.be"
        phone_mobile:
          type: string
          nullable: true
          example: "0411/11.11.11"
        contest:
          type: string
          nullable: true
          example: "SPECIALIST"
        cohort:
          $ref: '#/components/schemas/CohortGet'
        evolution_score:
          type: number
          nullable: true
          example: 17
        evolution_score_reason:
          type: string
          nullable: true
          example: "reason"
    PeriodGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        name:
          type: string
          nullable: true
          example: "P1"
        date_start:
          type: string
          example: "01/02/2020"
        date_end:
          type: string
          example: "01/03/2020"
        cohort:
          $ref: '#/components/schemas/CohortGet'
    StudentAffectationGet:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        student:
          $ref: '#/components/schemas/Student'
        organization:
          $ref: '#/components/schemas/Uuid'
        speciality:
          $ref: '#/components/schemas/Uuid'
        period:
          $ref: '#/components/schemas/PeriodGet'
        internship:
          type: string
        score:
          $ref: '#/components/schemas/ScoreListGet'
    ScoreGet:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/Uuid'
        cohort:
          type: string
        excused:
          type: boolean
        reason:
          type: string
          nullable: true
        score:
          type: number
          nullable: true
        comments:
          type: object
          nullable: true
        objectives:
          type: object
          nullable: true
        validated:
          type: boolean
        APD_1:
          type: string
          nullable: true
        APD_2:
          type: string
          nullable: true
        APD_3:
          type: string
          nullable: true
        APD_4:
          type: string
          nullable: true
        APD_5:
          type: string
          nullable: true
        APD_6:
          type: string
          nullable: true
        APD_7:
          type: string
          nullable: true
        APD_8:
          type: string
          nullable: true
        APD_9:
          type: string
          nullable: true
        APD_10:
          type: string
          nullable: true
        APD_11:
          type: string
          nullable: true
        APD_12:
          type: string
          nullable: true
        APD_13:
          type: string
          nullable: true
        APD_14:
          type: string
          nullable: true
        APD_15:
          type: string
          nullable: true
        student_presence:
          type: boolean
          nullable: true
    ScoreListGet:
      type: object
      nullable: true
      properties:
        uuid:
          $ref: '#/components/schemas/Uuid'
        validated:
          type: boolean
        APD_1:
          type: string
          nullable: true
        APD_2:
          type: string
          nullable: true
        APD_3:
          type: string
          nullable: true
        APD_4:
          type: string
          nullable: true
        APD_5:
          type: string
          nullable: true
        APD_6:
          type: string
          nullable: true
        APD_7:
          type: string
          nullable: true
        APD_8:
          type: string
          nullable: true
        APD_9:
          type: string
          nullable: true
        APD_10:
          type: string
          nullable: true
        APD_11:
          type: string
          nullable: true
        APD_12:
          type: string
          nullable: true
        APD_13:
          type: string
          nullable: true
        APD_14:
          type: string
          nullable: true
        APD_15:
          type: string
          nullable: true
        student_presence:
          type: boolean
          nullable: true
        comments:
          type: object
          nullable: true
    Uuid:
      type: string
      format: uuid
      example: "abcd-efgh-ijkl-mnop-1234-5678"
    Student:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/Uuid'
        first_name:
          type: string
        last_name:
          type: string
    Person:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/Uuid'
        first_name:
          type: string
          nullable: true
          example: "Dupont"
        last_name:
          type: string
          example: "Jacques"
        email:
          type: string
          nullable: true
          example: "jacques.dupont@mail.xyz"
        gender:
          type: string
          nullable: true
          example: "H"
        birth_date:
          type: string
          nullable: true
          example: "1989-01-01"
    Country:
      type: object
      properties:
        url:
          type: string
          nullable: true
          format: uri
        uuid:
          $ref: '#/components/schemas/Uuid'
        iso_code:
          type: string
          example: "BE"
        name:
          type: string
          example: "Belgique"
        name_en:
          type: string
          example: "Belgium"
        nationality:
          type: string
          example: "Belgian"
          nullable: true
    PeriodPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/PeriodGet'
    MasterPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/MasterGet'
    AllocationPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllocationGet'
    SpecialtyPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SpecialtyGet'
    CohortPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/CohortGet'
    OrganizationPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationGet'
    InternshipPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/InternshipGet'
    StudentPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentGet'
    StudentAffectationPaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentAffectationGet'
    ScorePaging:
      properties:
        count:
          type: number
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScoreGet'
security:
  - Token: []
